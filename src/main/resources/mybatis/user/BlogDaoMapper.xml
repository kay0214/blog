<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.sandman.blog.dao.mysql.user.BlogDao">
    <sql id="blog">
        t.id as id,
        t.bloggerId as bloggerId,
        t.title as title,
        t.summary as summary,
        t.content as content,
        t.contentNoTag as contentNoTag,
        t.clickCount as clickCount,
        t.replayCount as replayCount,
        t.isTop as isTop,
        t.isDraft as isDraft,
        t.isForbiddenComment as isForbiddenComment,
        t.blogType as blogType,
        t.onlyMeRead as onlyMeRead,
        t.categoryId as categoryId,
        t.categoryName as categoryName,
        t.keyWord as keyWord,
        t.createBy as createBy,
        t.createTime as createTime,
        t.updateBy as updateBy,
        t.updateTime as updateTime,
        t.delFlag as delFlag,
        r.id as r_id,
        r.userName as r_userName,
        r.nickName as r_nickName,
        r.sign as r_sign,
        r.proFile as r_proFile,
        r.imageUrl as r_imageUrl,
        r.originalBlogCount as r_originalBlogCount,
        r.transferBlogCount as r_transferBlogCount,
        r.visitCount as r_visitCount,
        r.commentCount as r_commentCount,
        r.createBy as r_createBy,
        r.createTime as r_createTime,
        r.updateBy as r_updateBy,
        r.updateTime as r_updateTime,
        r.delFlag as r_delFlag
    </sql>
    <resultMap id="blogResultMap" type="com.sandman.blog.entity.user.Blog">
        <id property="id" column="id"/>
        <result property="bloggerId" column="bloggerId"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="content" column="content"/>
        <result property="contentNoTag" column="contentNoTag"/>
        <result property="clickCount" column="clickCount"/>
        <result property="replayCount" column="replayCount"/>
        <result property="isTop" column="isTop"/>
        <result property="isDraft" column="isDraft"/>
        <result property="isForbiddenComment" column="isForbiddenComment"/>
        <result property="blogType" column="blogType"/>
        <result property="onlyMeRead" column="onlyMeRead"/>
        <result property="categoryId" column="categoryId"/>
        <result property="categoryName" column="categoryName"/>
        <result property="keyWord" column="keyWord"/>
        <result property="createBy" column="createBy"/>
        <result property="createTime" column="createTime"/>
        <result property="updateBy" column="updateBy"/>
        <result property="updateTime" column="updateTime"/>
        <result property="delFlag" column="delFlag"/>
        <association property="blogger" javaType="com.sandman.blog.entity.user.Blogger">
            <id property="id" column="r_id"/>
            <result property="userName" column="r_userName"/>
            <result property="nickName" column="r_nickName"/>
            <result property="sign" column="r_sign"/>
            <result property="proFile" column="r_proFile"/>
            <result property="imageUrl" column="r_imageUrl"/>
            <result property="originalBlogCount" column="r_originalBlogCount"/>
            <result property="transferBlogCount" column="r_transferBlogCount"/>
            <result property="visitCount" column="r_visitCount"/>
            <result property="commentCount" column="r_commentCount"/>
            <result property="createBy" column="r_createBy"/>
            <result property="createTime" column="r_createTime"/>
            <result property="updateBy" column="r_updateBy"/>
            <result property="updateTime" column="r_updateTime"/>
            <result property="delFlag" column="r_delFlag"/>
        </association>
    </resultMap>
    <select id="getBlogById" parameterType="Long" resultMap="blogResultMap">
      select <include refid="blog"/> from blog t,blogger r where t.delFlag=0 and t.bloggerId = r.id and t.id = #{id}
    </select>
    <select id="getAllBlog" parameterType="com.sandman.blog.entity.common.SortParam" resultMap="blogResultMap">
        select <include refid="blog"/> from blog t,blogger r where t.delFlag=0 and t.bloggerId = r.id and t.isDraft = 0 and t.onlyMeRead = 0
        <if test="keyWord!=null and keyWord!='' and keyWord != 'undefined'">
            and (t.title like CONCAT('%',#{keyWord},'%') or t.contentNoTag like CONCAT('%',#{keyWord},'%'))
        </if>

    </select>
    <select id="findByBloggerId" parameterType="Long" resultMap="blogResultMap">
        select <include refid="blog"/> from blog t,blogger r where t.delFlag=0 and t.bloggerId = r.id and t.isDraft = 0 and t.onlyMeRead = 0
        <if test="bloggerId != null">
            and t.bloggerId = #{bloggerId}
        </if>
    </select>
    <select id="findAllByBloggerId" parameterType="Long" resultMap="blogResultMap">
        select <include refid="blog"/> from blog t,blogger r where t.delFlag=0 and t.bloggerId = r.id
        <if test="bloggerId != null">
            and t.bloggerId = #{bloggerId}
        </if>
    </select>
    <update id="updateBlog" parameterType="com.sandman.blog.entity.user.Blog">
        update blog set updateTime=#{updateTime}
        <if test="title !=null and title!=''">
            ,title=#{title}
        </if>
        <if test="summary !=null and summary!=''">
            ,summary=#{summary}
        </if>
        <if test="content!=null and content!=''">
            ,content=#{content}
        </if>
        <if test="contentNoTag !=null and contentNoTag!=''">
            ,contentNoTag=#{contentNoTag}
        </if>
        <if test="clickCount !=null">
            ,clickCount=#{clickCount}
        </if>
        <if test="replayCount !=null">
            ,replayCount=#{replayCount}
        </if>
        <if test="isTop !=null">
            ,isTop=#{isTop}
        </if>
        <if test="isDraft !=null">
            ,isDraft=#{isDraft}
        </if>
        <if test="isForbiddenComment !=null">
            ,isForbiddenComment=#{isForbiddenComment}
        </if>
        <if test="blogType !=null">
            ,blogType=#{blogType}
        </if>
        <if test="onlyMeRead !=null">
            ,onlyMeRead=#{onlyMeRead}
        </if>
        <if test="categoryId !=null">
            ,categoryId=#{categoryId}
        </if>
        <if test="categoryName !=null and categoryName!=''">
            ,categoryName=#{categoryName}
        </if>
        <if test="keyWord !=null and keyWord!=''">
            ,keyWord=#{keyWord}
        </if>
        <if test="updateBy !=null">
            ,updateBy=#{updateBy}
        </if>
        <if test="updateTime !=null">
            ,updateTime=#{updateTime}
        </if>
        <if test="delFlag !=null">
            ,delFlag=#{delFlag}
        </if>
        where id=#{id}
    </update>
    <insert id="createBlog" parameterType="com.sandman.blog.entity.user.Blog">
        insert into blog values(null,#{bloggerId},#{title},#{summary},#{content},#{contentNoTag},#{clickCount},#{replayCount},#{isTop}
        ,#{isDraft},#{isForbiddenComment},#{blogType},#{onlyMeRead},#{categoryId},#{categoryName},#{keyWord},#{createBy},#{createTime},#{updateBy},#{updateTime},#{delFlag})
    </insert>
</mapper>